{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raoof\\\\Desktop\\\\Incorta\\\\json-manipulation\\\\src\\\\components\\\\OnlinePosts\\\\GetOnlinePosts.js\";\nimport React, { Component } from 'react';\n\nclass GetOnlinePosts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    // I will use fake api from jsonplaceholder website\n    // this return 100 posts\n    fetch(\"http://localhost:8000/testApi\").then(response => response.json()).then( // handle the result\n    result => {\n      this.setState({\n        isLoaded: true,\n        posts: result\n      });\n    }, // Handle error\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          posts = _this$state.posts;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Error in loading\");\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Loading ...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, posts.map(post => React.createElement(\"li\", {\n        key: post.id,\n        align: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, post.title), React.createElement(\"p\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, post.body))))));\n    }\n  }\n\n}\n\nexport default GetOnlinePosts;","map":{"version":3,"sources":["C:\\Users\\Raoof\\Desktop\\Incorta\\json-manipulation\\src\\components\\OnlinePosts\\GetOnlinePosts.js"],"names":["React","Component","GetOnlinePosts","constructor","props","state","error","isLoaded","posts","componentDidMount","fetch","then","response","json","result","setState","render","map","post","id","title","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACnCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,IADC;AAETC,MAAAA,QAAQ,EAAG,KAFF;AAGTC,MAAAA,KAAK,EAAG;AAHC,KAAb;AAKH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACAC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,EAGI;AACCG,IAAAA,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAG,IADD;AAEVC,QAAAA,KAAK,EAAGM;AAFE,OAAd;AAIH,KATL,EAUI;AACCR,IAAAA,KAAD,IAAW;AACP,WAAKS,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAhBL;AAkBH;;AACDU,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKX,KAD7B;AAAA,UACFC,KADE,eACFA,KADE;AAAA,UACKC,QADL,eACKA,QADL;AAAA,UACeC,KADf,eACeA,KADf;;AAET,QAAGF,KAAH,EAAS;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACH,KAFD,MAEM,IAAI,CAACC,QAAL,EAAe;AACjB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH,KAFK,MAED;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIC,KAAK,CAACS,GAAN,CAAUC,IAAI,IACV;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,QAAA,KAAK,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBD,IAAI,CAACE,KAA3B,CADJ,EAEI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBF,IAAI,CAACG,IAA1B,CAFJ,CADJ,CADJ,CAFJ,CADJ,CADJ;AAgBH;AAEJ;;AAxDsC;;AA0DtC,eAAenB,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nclass GetOnlinePosts extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            error : null,\r\n            isLoaded : false,\r\n            posts : []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        // I will use fake api from jsonplaceholder website\r\n        // this return 100 posts\r\n        fetch(\"http://localhost:8000/testApi\")\r\n        .then( response => response.json())\r\n        .then(\r\n            // handle the result\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded : true,\r\n                    posts : result\r\n                });\r\n            },\r\n            // Handle error\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                })\r\n            },\r\n        )\r\n    }\r\n    render() {\r\n    const {error, isLoaded, posts} = this.state;\r\n    if(error){\r\n        return <div>Error in loading</div>\r\n    }else if (!isLoaded) {\r\n        return <div>Loading ...</div>\r\n    }else{\r\n        return(\r\n            <div>\r\n                <ol className=\"item\">\r\n                {\r\n                    posts.map(post => (\r\n                        <li key={post.id} align=\"start\">\r\n                            <div>\r\n                                <p className=\"title\">{post.title}</p>\r\n                                <p className=\"body\">{post.body}</p>\r\n                            </div>\r\n                        </li>\r\n                    ))\r\n                }\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n  }\r\n export default GetOnlinePosts;\r\n"]},"metadata":{},"sourceType":"module"}