{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raoof\\\\Desktop\\\\Incorta\\\\json-manipulation\\\\src\\\\components\\\\OnlinePosts\\\\GetOnlinePosts.js\";\nimport React, { Component } from 'react';\n\nclass GetOnlinePosts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      countries: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    // I will use fake api from jsonplaceholder website\n    // this return 100 posts\n    fetch(\"http://localhost:8000/testApi\").then(response => response.json()).then( // handle the result\n    result => {\n      this.setState({\n        isLoaded: true,\n        countries: result\n      });\n    }, // Handle error\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n    this.refs.search.focus();\n  }\n\n  handleChange() {\n    this.setState({\n      searchString: this.refs.search.value\n    });\n  }\n\n  render() {\n    let _countries = this.state.countries;\n    let search = this.state.searchString.trim().toLowerCase();\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded;\n\n    if (search.length > 0) {\n      _users = _users.filter(function (country) {\n        return country.name.toLowerCase().match(search);\n      });\n    }\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Error in loading\");\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Loading ...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, countries.map(country => React.createElement(\"li\", {\n        key: country.id,\n        align: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, country.code, \" , \", country.name)))));\n    }\n  }\n\n}\n\nexport default GetOnlinePosts;","map":{"version":3,"sources":["C:\\Users\\Raoof\\Desktop\\Incorta\\json-manipulation\\src\\components\\OnlinePosts\\GetOnlinePosts.js"],"names":["React","Component","GetOnlinePosts","constructor","props","state","error","isLoaded","countries","handleChange","bind","componentDidMount","fetch","then","response","json","result","setState","refs","search","focus","searchString","value","render","_countries","trim","toLowerCase","length","_users","filter","country","name","match","map","id","code"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACnCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,IADC;AAETC,MAAAA,QAAQ,EAAG,KAFF;AAGTC,MAAAA,SAAS,EAAG;AAHH,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACAC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,EAGI;AACCG,IAAAA,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACVV,QAAAA,QAAQ,EAAG,IADD;AAEVC,QAAAA,SAAS,EAAGQ;AAFF,OAAd;AAOH,KAZL,EAaI;AACCV,IAAAA,KAAD,IAAW;AACP,WAAKW,QAAL,CAAc;AACVV,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAnBL;AAqBE,SAAKY,IAAL,CAAUC,MAAV,CAAiBC,KAAjB;AACL;;AACDX,EAAAA,YAAY,GAAG;AACb,SAAKQ,QAAL,CAAc;AACZI,MAAAA,YAAY,EAAE,KAAKH,IAAL,CAAUC,MAAV,CAAiBG;AADnB,KAAd;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACT,QAAIC,UAAU,GAAG,KAAKnB,KAAL,CAAWG,SAA5B;AACA,QAAIW,MAAM,GAAG,KAAKd,KAAL,CAAWgB,YAAX,CAAwBI,IAAxB,GAA+BC,WAA/B,EAAb;AAFS,wBAIiB,KAAKrB,KAJtB;AAAA,UAIFC,KAJE,eAIFA,KAJE;AAAA,UAIKC,QAJL,eAIKA,QAJL;;AAKT,QAAIY,MAAM,CAACQ,MAAP,GAAgB,CAApB,EAAuB;AACpBC,MAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAc,UAASC,OAAT,EAAkB;AACzC,eAAOA,OAAO,CAACC,IAAR,CAAaL,WAAb,GAA2BM,KAA3B,CAAiCb,MAAjC,CAAP;AACC,OAFQ,CAAT;AAGF;;AACD,QAAGb,KAAH,EAAS;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACH,KAFD,MAEM,IAAI,CAACC,QAAL,EAAe;AACjB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH,KAFK,MAED;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIC,SAAS,CAACyB,GAAV,CAAcH,OAAO,IACjB;AAAI,QAAA,GAAG,EAAEA,OAAO,CAACI,EAAjB;AAAqB,QAAA,KAAK,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIJ,OAAO,CAACK,IADZ,SACqBL,OAAO,CAACC,IAD7B,CADJ,CADJ,CAFJ,CADJ,CADJ;AAeH;AAEJ;;AAzEsC;;AA2EtC,eAAe7B,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nclass GetOnlinePosts extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            error : null,\r\n            isLoaded : false,\r\n            countries : []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        // I will use fake api from jsonplaceholder website\r\n        // this return 100 posts\r\n        fetch(\"http://localhost:8000/testApi\")\r\n        .then( response => response.json())\r\n        .then(\r\n            // handle the result\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded : true,\r\n                    countries : result,\r\n\r\n                });\r\n\r\n\r\n            },\r\n            // Handle error\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                })\r\n            },\r\n        )\r\n          this.refs.search.focus();\r\n    }\r\n    handleChange() {\r\n      this.setState({\r\n        searchString: this.refs.search.value\r\n      });\r\n    }\r\n    render() {\r\n    let _countries = this.state.countries;\r\n    let search = this.state.searchString.trim().toLowerCase();\r\n\r\n    const {error, isLoaded} = this.state;\r\n    if (search.length > 0) {\r\n       _users = _users.filter(function(country) {\r\n       return country.name.toLowerCase().match(search);\r\n       });\r\n    }\r\n    if(error){\r\n        return <div>Error in loading</div>\r\n    }else if (!isLoaded) {\r\n        return <div>Loading ...</div>\r\n    }else{\r\n        return(\r\n            <div>\r\n                <ol className=\"item\">\r\n                {\r\n                    countries.map(country => (\r\n                        <li key={country.id} align=\"start\">\r\n                            <div>\r\n                               {country.code} , {country.name}\r\n                            </div>\r\n                        </li>\r\n                    ))\r\n                }\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n  }\r\n export default GetOnlinePosts;\r\n"]},"metadata":{},"sourceType":"module"}