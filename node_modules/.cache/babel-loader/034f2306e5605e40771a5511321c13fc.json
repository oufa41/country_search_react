{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raoof\\\\Desktop\\\\Incorta\\\\json-manipulation\\\\src\\\\components\\\\OnlinePosts\\\\GetOnlinePosts.js\";\nimport React, { Component } from 'react';\nconsole.log(\"\");\n\nclass GetOnlinePosts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      countries: []\n    };\n    console.log(\"a7a\");\n  }\n\n  componentDidMount() {\n    // I will use fake api from jsonplaceholder website\n    // this return 100 posts\n\n    /*fetch(\"http://localhost:8000/testApi\")\r\n    .then( response => response.json())\r\n    .then(\r\n        // handle the result\r\n        (result) => {\r\n            this.setState({\r\n                isLoaded : true,\r\n                countries : result,\r\n              });\r\n        },\r\n        // Handle error\r\n        (error) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                error\r\n            })\r\n        },\r\n    )*/\n    fetch('http://localhost:8000/testApi').then(res => res.json()).then(json => json).then(countries => this.setState({\n      'countries': countries\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          countries = _this$state.countries;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Error in loading\");\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Loading ...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, countries.map(country => React.createElement(\"li\", {\n        key: country.id,\n        align: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, country.code, \" ,\", country.name)))));\n    }\n  }\n\n}\n\nexport default GetOnlinePosts;","map":{"version":3,"sources":["C:\\Users\\Raoof\\Desktop\\Incorta\\json-manipulation\\src\\components\\OnlinePosts\\GetOnlinePosts.js"],"names":["React","Component","console","log","GetOnlinePosts","constructor","props","state","error","isLoaded","countries","componentDidMount","fetch","then","res","json","setState","render","map","country","id","code","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACAC,OAAO,CAACC,GAAR,CAAY,EAAZ;;AACA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AACnCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,IADC;AAETC,MAAAA,QAAQ,EAAG,KAFF;AAGTC,MAAAA,SAAS,EAAG;AAHH,KAAb;AAKAR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;;AACDQ,EAAAA,iBAAiB,GAAG;AAChB;AACA;;AACA;;;;;;;;;;;;;;;;;;AAmBAC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAIA,IAFd,EAGCF,IAHD,CAGMH,SAAS,IAAI,KAAKM,QAAL,CAAc;AAAE,mBAAaN;AAAf,KAAd,CAHnB;AAKH;;AACDO,EAAAA,MAAM,GAAG;AAAA,wBAC4B,KAAKV,KADjC;AAAA,UACFC,KADE,eACFA,KADE;AAAA,UACKC,QADL,eACKA,QADL;AAAA,UACeC,SADf,eACeA,SADf;;AAET,QAAGF,KAAH,EAAS;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACH,KAFD,MAEM,IAAI,CAACC,QAAL,EAAe;AACjB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH,KAFK,MAED;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIC,SAAS,CAACQ,GAAV,CAAcC,OAAO,IACjB;AAAI,QAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAqB,QAAA,KAAK,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACID,OAAO,CAACE,IADZ,QACoBF,OAAO,CAACG,IAD5B,CADJ,CADJ,CAFJ,CADJ,CADJ;AAeH;AAEJ;;AA9DsC;;AAgEtC,eAAelB,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nconsole.log(\"\");\r\nclass GetOnlinePosts extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            error : null,\r\n            isLoaded : false,\r\n            countries : []\r\n        };\r\n        console.log(\"a7a\");\r\n    }\r\n    componentDidMount() {\r\n        // I will use fake api from jsonplaceholder website\r\n        // this return 100 posts\r\n        /*fetch(\"http://localhost:8000/testApi\")\r\n        .then( response => response.json())\r\n        .then(\r\n            // handle the result\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded : true,\r\n                    countries : result,\r\n\r\n                });\r\n            },\r\n            // Handle error\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                })\r\n            },\r\n        )*/\r\n        fetch('http://localhost:8000/testApi')\r\n        .then(res => res.json())\r\n        .then(json => json)\r\n        .then(countries => this.setState({ 'countries': countries }))\r\n\r\n    }\r\n    render() {\r\n    const {error, isLoaded, countries} = this.state;\r\n    if(error){\r\n        return <div>Error in loading</div>\r\n    }else if (!isLoaded) {\r\n        return <div>Loading ...</div>\r\n    }else{\r\n        return(\r\n            <div>\r\n                <ol className=\"item\">\r\n                {\r\n                    countries.map(country => (\r\n                        <li key={country.id} align=\"start\">\r\n                            <div>\r\n                               {country.code} ,{country.name}\r\n                            </div>\r\n                        </li>\r\n                    ))\r\n                }\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n  }\r\n export default GetOnlinePosts;\r\n"]},"metadata":{},"sourceType":"module"}